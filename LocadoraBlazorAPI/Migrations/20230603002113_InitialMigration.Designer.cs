// <auto-generated />
using System;
using LocadoraBlazorAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LocadoraBlazorAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230603002113_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Categoria", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("Cilindrada")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("URLImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            Cilindrada = 1000,
                            Descricao = "",
                            Nome = "Categoria1",
                            URLImage = ""
                        });
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Cliente", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("CategoriaHabilitacao")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GrupoAcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Habilitacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CategoriaHabilitacao = "A",
                            Celular = "11912345678",
                            Cpf = "123.456.789-00",
                            DataNascimento = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cliente1@gmail.com",
                            Endereco = "Rua 1, 123",
                            GrupoAcesso = "C",
                            Habilitacao = "123456",
                            Nome = "Cliente1",
                            Senha = "senha123"
                        });
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Funcionario", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GrupoAcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumCarteiraTrabalho")
                        .HasColumnType("int");

                    b.Property<float>("Salario")
                        .HasMaxLength(100)
                        .HasColumnType("real");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            ID = 2L,
                            DataNascimento = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "funcionario1@gmail.com",
                            Endereco = "Rua 2, 123",
                            Funcao = "Gerente",
                            GrupoAcesso = "F",
                            Nome = "Funcionario1",
                            NumCarteiraTrabalho = 123456,
                            Salario = 3000f,
                            Senha = "senha123"
                        });
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.ItemAdicional", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("ItemAdicional");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            Descricao = "Item Adicional 1",
                            Quantidade = 10,
                            Valor = 50f
                        });
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Locacao", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("ClienteID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRetirada")
                        .HasColumnType("datetime2");

                    b.Property<float?>("DescontoPromocao")
                        .HasColumnType("real");

                    b.Property<string>("Observacao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("PagamentoID")
                        .HasColumnType("bigint");

                    b.Property<int?>("QuilometragemFinal")
                        .HasColumnType("int");

                    b.Property<int>("QuilometragemInicial")
                        .HasColumnType("int");

                    b.Property<bool>("Reserva")
                        .HasColumnType("bit");

                    b.Property<float>("ValorItemAdicional")
                        .HasColumnType("real");

                    b.Property<float>("ValorLocacao")
                        .HasColumnType("real");

                    b.Property<float>("ValorServico")
                        .HasColumnType("real");

                    b.Property<long>("VeiculoID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("PagamentoID");

                    b.HasIndex("VeiculoID");

                    b.ToTable("Locacoes");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            ClienteID = 1L,
                            DataRetirada = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PagamentoID = 1L,
                            QuilometragemInicial = 0,
                            Reserva = true,
                            ValorItemAdicional = 0f,
                            ValorLocacao = 100f,
                            ValorServico = 10f,
                            VeiculoID = 1L
                        });
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Pagamento", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("ConfirmacaoPagamento")
                        .HasColumnType("int");

                    b.Property<double>("ValorPago")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Pagamentos");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            ConfirmacaoPagamento = 1,
                            ValorPago = 100.0
                        });
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Servico", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("LocacaoID")
                        .HasColumnType("bigint");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("LocacaoID");

                    b.ToTable("Servico");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            Descricao = "Servico 1",
                            Valor = 200f
                        });
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Veiculo", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<long?>("CategoriaID")
                        .HasColumnType("bigint");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Renavam")
                        .HasColumnType("int");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.Property<string>("URLImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ValorDiaria")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Veiculos");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            Ano = 2023,
                            Cor = "Vermelho",
                            Descricao = "",
                            LocacaoId = 0,
                            Modelo = "Monster 1200 S",
                            Peso = 166f,
                            Placa = "ABC-1234",
                            Renavam = 123456,
                            Situacao = true,
                            URLImage = "\\Imagens\\Motos\\cor - monster - 1200 - s - vermelho - min.png",
                            ValorDiaria = 100f
                        },
                        new
                        {
                            ID = 2L,
                            Ano = 2023,
                            Cor = "Verde",
                            Descricao = "",
                            LocacaoId = 0,
                            Modelo = "Kawasaki Z900",
                            Peso = 210f,
                            Placa = "DEF-5678",
                            Renavam = 234567,
                            Situacao = true,
                            URLImage = "\\Imagens\\Motos\\Kawasaki Z900.png",
                            ValorDiaria = 120f
                        },
                        new
                        {
                            ID = 3L,
                            Ano = 2023,
                            Cor = "Red",
                            Descricao = "",
                            LocacaoId = 0,
                            Modelo = "Multistrada 950 S",
                            Peso = 230f,
                            Placa = "GHI-9012",
                            Renavam = 345678,
                            Situacao = true,
                            URLImage = "\\Imagens\\Motos\\Model - Menu - MY20 - Multistrada - 950 - S - Red.png",
                            ValorDiaria = 130f
                        },
                        new
                        {
                            ID = 4L,
                            Ano = 2023,
                            Cor = "Black",
                            Descricao = "",
                            LocacaoId = 0,
                            Modelo = "SCR 1100 Sport Pro",
                            Peso = 250f,
                            Placa = "JKL-3456",
                            Renavam = 456789,
                            Situacao = true,
                            URLImage = "\\Imagens\\Motos\\Model - Menu - MY21 - SCR - 1100 - Sport - Pro - v04.png",
                            ValorDiaria = 150f
                        },
                        new
                        {
                            ID = 5L,
                            Ano = 2023,
                            Cor = "Blue",
                            Descricao = "",
                            LocacaoId = 0,
                            Modelo = "SCR 1100 Tribute",
                            Peso = 270f,
                            Placa = "MNO-7890",
                            Renavam = 567890,
                            Situacao = true,
                            URLImage = "\\Imagens\\Motos\\Model - Menu - MY22 - SCR - 1100 - Tribute.png",
                            ValorDiaria = 170f
                        },
                        new
                        {
                            ID = 6L,
                            Ano = 2023,
                            Cor = "Red",
                            Descricao = "",
                            LocacaoId = 0,
                            Modelo = "Superleggera V4",
                            Peso = 290f,
                            Placa = "PQR-1234",
                            Renavam = 678901,
                            Situacao = true,
                            URLImage = "\\Imagens\\Motos\\MY - 21 - Superleggera - V4 - 01 - Model - Blocks - 630x390 - v03.png",
                            ValorDiaria = 190f
                        },
                        new
                        {
                            ID = 7L,
                            Ano = 2023,
                            Cor = "Yellow",
                            Descricao = "",
                            LocacaoId = 0,
                            Modelo = "Modelo",
                            Peso = 310f,
                            Placa = "STU-5678",
                            Renavam = 789012,
                            Situacao = true,
                            URLImage = "\\Imagens\\Motos\\AnotherImage.png",
                            ValorDiaria = 210f
                        });
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Locacao", b =>
                {
                    b.HasOne("LocadoraBlazorAPI.Entities.Cliente", "Cliente")
                        .WithMany("Locacoes")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocadoraBlazorAPI.Entities.Pagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("PagamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LocadoraBlazorAPI.Entities.Veiculo", "Veiculo")
                        .WithMany("Locacoes")
                        .HasForeignKey("VeiculoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Pagamento");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Servico", b =>
                {
                    b.HasOne("LocadoraBlazorAPI.Entities.Locacao", null)
                        .WithMany("Servicos")
                        .HasForeignKey("LocacaoID");
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Veiculo", b =>
                {
                    b.HasOne("LocadoraBlazorAPI.Entities.Categoria", "Categoria")
                        .WithMany("Veiculos")
                        .HasForeignKey("CategoriaID");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Categoria", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Cliente", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Locacao", b =>
                {
                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("LocadoraBlazorAPI.Entities.Veiculo", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
